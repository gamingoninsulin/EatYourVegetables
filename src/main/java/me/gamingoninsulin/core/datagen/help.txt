// Raw sea_pickle Block
        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, ModBlocks.SEA_PICKLE_BLOCK)
                .pattern("CCC")
                .pattern("CCC")
                .pattern("CCC")

                .input('C', ModItems.SEA_PICKLE)

                .criterion(hasItem(ModItems.SEA_PICKLE), conditionsFromItem(ModItems.SEA_PICKLE))
                .offerTo(exporter, new Identifier(getRecipeName(ModItems.SEA_PICKLE) + "_to_" + "sea_pickle_block"));

        // Raw sea_pickle Stairs (LEFT)
        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, ModBlocks.SEA_PICKLE_STAIRS)
                .pattern("C  ")
                .pattern("CC ")
                .pattern("CCC")


                .input('C', ModBlocks.SEA_PICKLE_BLOCK)

                .criterion(hasItem(ModBlocks.SEA_PICKLE_BLOCK), conditionsFromItem(ModBlocks.SEA_PICKLE_BLOCK))
                .offerTo(exporter, new Identifier(getRecipeName(ModBlocks.SEA_PICKLE_STAIRS) + "_left"));

        // Raw sea_pickle Stairs (RIGHT)
        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, ModBlocks.SEA_PICKLE_STAIRS)
                .pattern("  C")
                .pattern(" CC")
                .pattern("CCC")


                .input('C', ModBlocks.SEA_PICKLE_BLOCK)

                .criterion(hasItem(ModBlocks.SEA_PICKLE_BLOCK), conditionsFromItem(ModBlocks.SEA_PICKLE_BLOCK))
                .offerTo(exporter, new Identifier(getRecipeName(ModBlocks.SEA_PICKLE_STAIRS) + "_right"));

        // Raw sea_pickle Slab
        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, ModBlocks.SEA_PICKLE_SLAB)
                .pattern("CCC")


                .input('C', ModBlocks.SEA_PICKLE_BLOCK)

                .criterion(hasItem(ModBlocks.CAULIFLOWER_BLOCK), conditionsFromItem(ModBlocks.CAULIFLOWER_BLOCK))
                .offerTo(exporter, new Identifier(getRecipeName(ModBlocks.SEA_PICKLE_SLAB)));

        // Raw sea_pickle Fence
        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, ModBlocks.SEA_PICKLE_FENCE, 3)
                .pattern("SCS")
                .pattern("SCS")


                .input('C', ModBlocks.SEA_PICKLE_BLOCK)
                .input('S', Items.STICK)

                .criterion(hasItem(ModBlocks.SEA_PICKLE_BLOCK), conditionsFromItem(ModBlocks.SEA_PICKLE_BLOCK))
                .criterion(hasItem(Items.STICK), conditionsFromItem(Items.STICK))
                .offerTo(exporter, new Identifier(getRecipeName(ModBlocks.SEA_PICKLE_FENCE)));

        // Raw sea_pickle Fence Gate
        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, ModBlocks.SEA_PICKLE_FENCE_GATE, 1)
                .pattern("CSC")
                .pattern("CSC")


                .input('C', ModBlocks.SEA_PICKLE_BLOCK)
                .input('S', Items.STICK)

                .criterion(hasItem(ModBlocks.SEA_PICKLE_BLOCK), conditionsFromItem(ModBlocks.SEA_PICKLE_BLOCK))
                .criterion(hasItem(Items.STICK), conditionsFromItem(Items.STICK))
                .offerTo(exporter, new Identifier(getRecipeName(ModBlocks.SEA_PICKLE_FENCE_GATE)));

        // Raw sea_pickle Pressure Plate
        ShapedRecipeJsonBuilder.create(RecipeCategory.MISC, ModBlocks.SEA_PICKLE_PRESSURE_PLATE)
                .pattern("CC")


                .input('C', ModBlocks.SEA_PICKLE_BLOCK)

                .criterion(hasItem(ModBlocks.SEA_PICKLE_BLOCK), conditionsFromItem(ModBlocks.SEA_PICKLE_BLOCK))
                .offerTo(exporter, new Identifier(getRecipeName(ModBlocks.SEA_PICKLE_PRESSURE_PLATE)));

        // sea_pickle button
        ShapelessRecipeJsonBuilder.create(RecipeCategory.MISC, ModBlocks.SEA_PICKLE_BUTTON, 1)

                .input(ModBlocks.SEA_PICKLE_BLOCK)

                .criterion(hasItem(ModBlocks.SEA_PICKLE_BLOCK), conditionsFromItem(ModBlocks.SEA_PICKLE_BLOCK))
                .offerTo(exporter, new Identifier(getRecipeName(ModBlocks.SEA_PICKLE_BUTTON)));

        // ######################################################################################################### \\
        // crates to sea_pickle
        // Crate with 1 layer sea_pickle x 8
        ShapelessRecipeJsonBuilder.create(RecipeCategory.MISC, ModItems.SEA_PICKLE
                        , 8)

                .input(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_1)

                .criterion(hasItem(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_1), conditionsFromItem(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_1))
                .offerTo(exporter, new Identifier(getRecipeName(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_1) + "_to_sea_pickle"));

        // Crate with 2 layer sea_pickle x 16
        ShapelessRecipeJsonBuilder.create(RecipeCategory.MISC, ModItems.SEA_PICKLE
                        , 16)

                .input(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_2)

                .criterion(hasItem(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_2), conditionsFromItem(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_2))
                .offerTo(exporter, new Identifier(getRecipeName(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_2) + "_to_sea_pickle"));

        // Crate with 3 layer sea_pickle x 24
        ShapelessRecipeJsonBuilder.create(RecipeCategory.MISC, ModItems.SEA_PICKLE
                        , 24)

                .input(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_3)

                .criterion(hasItem(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_3), conditionsFromItem(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_3))
                .offerTo(exporter, new Identifier(getRecipeName(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_3) + "_to_sea_pickle"));

        // Crate with 4 layer sea_pickle x 32
        ShapelessRecipeJsonBuilder.create(RecipeCategory.MISC, ModItems.SEA_PICKLE
                        , 32)

                .input(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_4)

                .criterion(hasItem(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_4), conditionsFromItem(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_4))
                .offerTo(exporter, new Identifier(getRecipeName(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_4) + "_to_sea_pickle"));

        // Crate with 5 layer sea_pickle x 40
        ShapelessRecipeJsonBuilder.create(RecipeCategory.MISC, ModItems.SEA_PICKLE
                        , 40)

                .input(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_5)

                .criterion(hasItem(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_5), conditionsFromItem(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_5))
                .offerTo(exporter, new Identifier(getRecipeName(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_5) + "_to_sea_pickle"));

        // Crate with 6 layer sea_pickle x 48
        ShapelessRecipeJsonBuilder.create(RecipeCategory.MISC, ModItems.SEA_PICKLE
                        , 48)

                .input(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_6)

                .criterion(hasItem(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_6), conditionsFromItem(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_6))
                .offerTo(exporter, new Identifier(getRecipeName(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_6) + "_to_sea_pickle"));

        // Crate with 7 layer sea_pickle x 56
        ShapelessRecipeJsonBuilder.create(RecipeCategory.MISC, ModItems.SEA_PICKLE
                        , 56)

                .input(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_7)

                .criterion(hasItem(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_7), conditionsFromItem(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_7))
                .offerTo(exporter, new Identifier(getRecipeName(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_7) + "_to_sea_pickle"));

        // Crate with 8 layer sea_pickle x 64
        ShapelessRecipeJsonBuilder.create(RecipeCategory.MISC, ModItems.SEA_PICKLE
                        , 64)

                .input(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_8)

                .criterion(hasItem(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_8), conditionsFromItem(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_8))
                .offerTo(exporter, new Identifier(getRecipeName(ModBlocks.MOD_CRATE_BLOCK_SEA_PICKLE_LAYER_8) + "_to_sea_pickle"));

        // ######################################################################################################### \\